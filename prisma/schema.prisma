// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model MotorcycleUser {
  id          Int         @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String?     @unique
  phoneNumber String
  motorbikes  Motorbike[]

  @@map("motorbikeusers")
}

model Motorbike {
  id              Int      @id @default(autoincrement())
  plateNumber     String   @unique
  color           String
  engineSize      Float
  fuelConsumption Float
  make            String
  condition       String
  model           String
  price           Float
  fuelType        String
  manufactureYear Int?
  mileage         Float
  createdAt       DateTime @default(now())
  location        String
  imageUrls       String[]
  availability    Boolean
  description     String?
  userId          Int
  user            MotorcycleUser     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("motorbikes")
}

model User {
  id           String    @id
  username     String    @unique
  email        String?   @unique
  googleId     String?   @unique
  passwordHash String?   @unique
  sessions     Session[]

  @@map("users")
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@map("sessions")
}

